// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                         @id @unique @default(autoincrement())
  email                 String                      @unique
  passwordHash          String
  firstName             String
  lastName              String
  dirtyDate             DateTime                    @default(now())
  activeHours           ActiveHours?
  scheduledSchedulers   ScheduledEventScheduler[]
  unscheduledSchedulers UnscheduledEventScheduler[]
  dueDateSchedulers     DueDateEventScheduler[]
  events                Event[]
  procrastinationIndex  Int                         @default(1)
  createdAt             DateTime                    @default(now())
  updatedAt             DateTime                    @updatedAt
}

model EventSchedulerBase {
  name             String
  id               Int                        @id @default(autoincrement())
  latX             Float
  latY             Float
  travelTime       Float
  duration         Float
  doneScheduling   Boolean
  priority         Int
  lastScheduled    DateTime
  events           Event[]
  scheduledEvent   ScheduledEventScheduler?
  unscheduledEvent UnscheduledEventScheduler?
  dueDateEvent     DueDateEventScheduler?
}

model ScheduledEventScheduler {
  id            Int                @id @default(autoincrement())
  baseId        Int                @unique
  userId        Int
  user          User               @relation(fields: [userId], references: [id])
  repeatId      Int                @unique
  base          EventSchedulerBase @relation(fields: [baseId], references: [id])
  repeatInfo    RepeatInfo         @relation(fields: [repeatId], references: [id])
  startDateTime DateTime
  endDateTime   DateTime
}

model DueDateEventScheduler {
  id              Int                @id @default(autoincrement())
  baseId          Int                @unique
  base            EventSchedulerBase @relation(fields: [baseId], references: [id])
  userId          Int
  user            User               @relation(fields: [userId], references: [id])
  dueDateTime     DateTime
  blockSize       Float
  amountScheduled Float
}

model UnscheduledEventScheduler {
  id         Int                @id @default(autoincrement())
  baseId     Int                @unique
  repeatId   Int                @unique
  userId     Int
  user       User               @relation(fields: [userId], references: [id])
  base       EventSchedulerBase @relation(fields: [baseId], references: [id])
  repeatInfo RepeatInfo         @relation(fields: [repeatId], references: [id])
}

model Event {
  id          Int                @id @default(autoincrement())
  start       DateTime
  end         DateTime
  userId      Int
  schedulerId Int
  user        User               @relation(fields: [userId], references: [id])
  scheduler   EventSchedulerBase @relation(fields: [schedulerId], references: [id])
  kind        String
  complete    Boolean
  deleted     Boolean
}

model ActiveHours {
  id             Int      @id @default(autoincrement())
  userId         Int      @unique
  user           User     @relation(fields: [userId], references: [id])
  startMonday    DateTime
  endMonday      DateTime
  startTuesday   DateTime
  endTuesday     DateTime
  startWednesday DateTime
  endWednesday   DateTime
  startThursday  DateTime
  endThursday    DateTime
  startFriday    DateTime
  endFriday      DateTime
  startSaturday  DateTime
  endSaturday    DateTime
  startSunday    DateTime
  endSunday      DateTime
}

model RepeatInfo {
  id          Int                        @id @default(autoincrement())
  repeatType  String
  days        String
  unscheduled UnscheduledEventScheduler?
  scheduled   ScheduledEventScheduler?
}
